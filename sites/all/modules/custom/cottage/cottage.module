<?php
// Custom Module for Cottage Hill Station custom fucntions
// Author :  Omar Zorrilla Llerena
// emai   : omarzorrillallerena@gmail.com

function cottage_node_postsave/*insert*/($node){

  $type = $node->type;

      switch ($type) {
        case 'menu':

        //node
        //field_data_field_menu_variants
        //commerce_product
        
       $query = db_select('field_data_field_menu_variants', 'n')
        ->fields('n', array('field_menu_variants_product_id'))
        ->condition('entity_id', $node->nid,'=');
        $result = $query->execute();
        $product_id = $result->fetchField();
        
        $query = db_select('field_data_body', 'n')
        ->fields('n', array('entity_id'))
        ->condition('entity_id', $node->nid,'=');
        $result = $query->execute();
        $data = $result->fetchField();
        
        if(empty($data)){
          $result = db_insert('field_data_body')
          ->fields(array(
            'entity_type' => 'node',
            'bundle' => 'menu',
            'deleted'  => 0,
            'entity_id' => $node->nid,
            'revision_id' => $node->nid,
            'language' => 'und',
            'delta' => 0,
            'body_value' => '[product-button:'./*$node->nid*/$product_id.' title=Add to Cart]',
            //'body_value' => '[product-button:1 title=Add to Cart]',
            'body_format' => 'panopoly_html_text',
          ))
          ->execute();
          //dpm($nid);
        }else{
          
        $query = db_select('field_data_body', 'n')
        ->fields('n', array('body_value'))
       // ->condition('entity_id', $node->nid,'=')
        ->condition('entity_id', $node->nid,'=');        
        $result = $query->execute();
        $body = $result->fetchField();          
          
          
          
          $table_updated = db_update('field_data_body') // 
           ->fields(array(
           'body_value' => $body.'<br>'.'[product-button:'./*$node->nid*/$product_id.' title=Add to Cart]',    
           'body_format' => 'panopoly_html_text',
           ))
           ->condition('entity_id', $node->nid,'=')
           ->execute();
        }
          break;
        
      }
 
}

function cottage_commerce_cart_product_add($order, $product, $quantity, $line_item){
}



function cottage_commerce_line_item_type_info_alter(&$line_item_types) {
  $line_item_types['product']['callbacks'] = array('title' => '_cottage_commerce_product_line_item_title');
}

/**
* Returns an appropriate title for this line item for this site
*/
function _cottage_commerce_product_line_item_title($line_item) {
       $query = db_select('field_data_commerce_product', 'n')
        ->fields('n', array('commerce_product_product_id'))
        ->condition('entity_id', $line_item->line_item_id,'=');
        $result = $query->execute();
        $var = $result->fetchField();
  
       $query = db_select('field_data_field_menu_variants', 'n')
        ->fields('n', array('entity_id'))
        ->condition('field_menu_variants_product_id', $var,'=');
        $result = $query->execute();
        $product_id = $result->fetchField();

       $query = db_select('node', 'n')
        ->fields('n', array('title'))
        ->condition('nid', $product_id,'=');
        $result = $query->execute();
        $product_name = $result->fetchField();
        
 if ($product = entity_metadata_wrapper('commerce_line_item', $line_item)->commerce_product->value()) {
  if (isset($line_item->data['alt_title'])){
    return check_plain($line_item->data['alt_title']);
  }else{
    $alt_title = $product_name . ': ' ;//isset($line_item->data['svbtitle']) ? $line_item->data['svbtitle'] : '';
    return $alt_title . check_plain($product->title);
  }
 }
}